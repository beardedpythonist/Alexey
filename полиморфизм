# Полиморфизм — это принцип, согласно которому один и тот же объект может принимать различные формы.
# В контексте программирования это означает, что одна сущность в языке программирования может вести себя по-разному
# в зависимости от контекста. Это похоже на то, как слово «экспресс» может выступать в качестве глагола в одном предложении,
# существительного в другом предложении и прилагательного в третьем предложении. Последовательность букв на странице не меняется,
# но смысл, который они добавляют к предложению, в каждом случае принципиально разный. Точно так же в полиморфных языках
# программирования один объект может действовать по-разному в разных контекстах.


пример:

print(len("Programiz"))
print(len(["Python", "Java", "C"]))
print(len({"Name": "John", "Address": "Nepal"}))



# полимормизм. у разных классов методы и своиства  с одинаковыми именами

class Cat:
    def __init__(self, name, age):
        self.name = name
        self.age = age

    def info(self):
        print(f"I am a cat. My name is {self.name}. I am {self.age} years old.")

    def make_sound(self):
        print("Meow")


class Dog:
    def __init__(self, name, age):
        self.name = name
        self.age = age

    def info(self):
        print(f"I am a dog. My name is {self.name}. I am {self.age} years old.")

    def make_sound(self):
        print("Gaw- Gaw")


cat1 = Cat("Kitty", 2.5)
dog1 = Dog("Fluffy", 4)

for animal in (cat1, dog1):
    animal.make_sound()
    animal.info()
    animal.make_sound()