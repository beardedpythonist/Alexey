
***4. Напишите программу, которая будет рандомно генирировать от 2 до 5 объектов класса Human.
У каждого объекта этого класса рандомным образом должны определяться следующие свойства:
1) Пол: Мужчина или Женщина
2) Рандомное имя в зависимости от пола:
М(Lionel McCoy, Charles Cross, John Pitz, Jeffry Young, Johnathan Randall, Edward Townsend, Lewis Pope)
Ж(Aubrey Gilmore, Avice Reynolds, Theresa Bradford, Shonda Douglas, Karen Sanders, Ruby Rice, Ruth Rice)
Можно дополнить своими вариантами
3) Возраст: от 18 до 100 лет
4) Характер: холерик или сангвиник или меланхолик или флегматик
5) Место работы: Рабочий или Безработный
6) Рандомный капитал от 100$ до 10000$
7) Рандомный ежемесячный доход от 1000$ до 5000$, при наличии работы. Если работы нет, то от 100$ до 300$.
8) Рандомная дата рождения в формате xx.xx.xxxx(тип Protected)
9) Рандомная дата смерти в формате xx.xx.xxxx(тип Protected)
10) Наличие дома: Свой дом или Аренда
11) Наличие машины: Есть или нет
12) Семейное положение: Свободен или Женат/Замужем в зависимости от пола
13) Дата свадьбы, если статус Женат/Замужем присвоен сразу, то рандомная дата
в формате xx.xx.xxxx(тип Protected) в диапазоне от даты рождения +18 лет до текущего возраста
Если изначально статус свободен, то значение None
14) Ежемесячные расходы 30% от ежемесячного дохода

Создать метод info() с информацией о каждом объекте класса Human

Создать метод life() который ежегодно(1 итерация цикла) будет прибылвять 1 год объекту класса Human
Добавить шанс 1/30, что жизнь может оборваться преждевременно, в таком случае изменить дату смерти

Создать метод jobs() который ежегодно(1 итерация цикла) будет определять появиться ли работа у того,
у кого ее не было, или уволят ли того, у кого работа была и перезавписывать это свойство объекта.
Если характер "холерик", то шансы устроиться на работу 1/2, шансы быть уволеным 1/7
Если характер "сангвиник", то шансы устроиться на работу 1/3, шансы быть уволеным 1/10
Если характер "меланхолик", то шансы устроиться на работу 1/7, шансы быть уволеным 1/6
Если характер "флегматик", то шансы устроиться на работу 1/5, шансы быть уволеным 1/20
Добавить счётчик, который посчитает кол-во работ за всю жизнь.

Создать метод wedding() который ежегодно(1 итерация цикла) будет определять появиться ли вторая
половинка, если ее не было. От 18 до 30 лет шансы 1/4, от 31 до 45 шансы 1/7,
от 46 до 65 шансы 1/12, от 66+ шансы 1/20
Метод должен перезаписывать дату свадьбы

Создать метод salary() который ежегодно будет увеличивать капитал объекта согласно его доходу.
Добавить шанс 1/4 что доход может измениться в рандом диапазоне от 1000$ До 5000$.

Создать метод expenses() который ежегодно будет отнимать расходы от капитала
При наличии арендного жилья расходы должны увеличиваться на 15%, при собственном жилье только на 7%
При наличии авто расходы должны увеличиваться на 13%

Создать метод house() который ежегодно с шансом 1/4 будет определять, появиться ли у обекта свой
дом, если его еще не было при условии, что у объекта будет нужная сумма и отнимать от капитала
цену дома при покупке. Цена дома генирируется рандомно каждый год от 20000$ до 50000$

Создать метод car() который ежегодно с шансом 1/3 будет определять, появиться ли у обекта своя
машина, если ее еще не было при условии, что у объекта будет нужная сумма и отнимать от капитала
цену машины при покупке. Цена машины генирируется рандомно каждый год от 5000$ до 100000$


Как только все объекты умрут, добавить возможность выбора о каком объекте вывести информацию
на экран. Информация должна быть сначала изначальной, потом на конец жизни, чтобы можно было
сравнить данные.


# как из одного метода вызвать другой если объект еще не создан (из метода создани е = метод дата рождения)
#  как обратиться к обекту если его имя рандомно . (чтоб сменить атрибут один  ил все)
# как узнать и напечатать переменную объекта


from random import *

class Human:
    counter = 0
    ls = ['муж', 'жен']
    list_name_m = ['Lionel McCoy', 'Charles Cross', 'John Pitz', 'Jeffry Young', 'Johnathan Randall', 'Edward wnsend']
    list_name_zh = ['Aubrey Gilmore', 'Avice Reynolds', 'Theresa Bradford', 'Shonda Douglas', 'Karen Sanders']
    age = range(18, 100)
    charakter = ['холерик', 'сангвиник', 'меланхолик', 'флегматик']
    ls_job = ['рабочий', 'безработный']
    year_now = 2023

    def __init__(self, pol, name, age, charakter, job, capital, income, date_birth):
        self.pol = pol
        self.name = name
        self.age = age
        self.charakter = charakter
        self.job = job
        self.capital = capital
        self.income = income
        self.__date_birth =  date_birth

        Human.counter += 1
    def info(self):
        return self.name, self.pol, self.age, self.charakter, self.job, self.capital, self.income, self._Human__date_birth
    def date_birthday():
        pass
    def life(self, year):
        year = year  + 1
        return year
    @staticmethod
    def sozdaniye1():
        num = randrange(2, 6)
        slov ={}
        for c in range(num):
            pol = choice(Human.ls)
            charakter = choice(Human.charakter)
            if pol == 'жен':
                name = choice(Human.list_name_zh)
            else:
                name = choice(Human.list_name_m)
            age  = choice(Human.age)
            job =  choice(Human.ls_job)
            if job == 'рабочий':
                income =  randint(1000, 5000)
            else:
                income  = randint(100, 300)
            a =['a','b','c','d','e','f']
            capital =  randint(1000, 10000)
            day = randint(1, 30)
            month = randint(1, 12)
            year = randint(1960, 2000)
            date_birth = str(day) + '.' + str(month) + '.' + str(year)
            x = choice(a)  # выбор имено объекта
            x = Human(pol, name, age, charakter, job, capital, income, date_birth)    # создание экземпляра класса
            print(x.info()) # вызов метода инфо
            slov[x] = x.info()

Human.sozdaniye1()   # вызов статического метода создание объектов
print('итого создано: ', Human.counter)

Wasja = Human('Shonda Douglas', 'жен', 22, 'меланхолик', 'рабочий', 9520, 4323, '22.3.1986')   # как ко всем ??
actual_year = int(input('какой сейчас год?'))
x = actual_year - Human.year_now
print(Wasja._Human__date_birth[-4:])
print(int(Wasja._Human__date_birth[-4:]) + x)